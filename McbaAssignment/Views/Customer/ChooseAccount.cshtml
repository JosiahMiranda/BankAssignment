@model McbaAssignment.ViewModels.AccountTransactionViewModel
@{
    ViewData["Title"] = "Choose Account";
}

@*<h1 class="display-4">Account Number @Model.AccountNumber (@Model.GetAccountTypeString())</h1>*@

<div class="row">
    <div class="col-md-4">
        @if (Model.TransactionType == TransactionType.Deposit)
        {
            <form asp-action="ChooseAccount">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label for="Id" class="control-label">Choose Account to Deposit to:</label>
                <select class="form-control" asp-for="Id" asp-items="Model.Accountnumbers">
                </select>
            </div>
            <div class="form-group">
                <input type="submit" value="Deposit" class="btn btn-primary" />
                @Html.Hidden("transactionId", "1")
            </div>
            </form>
        } else if (Model.TransactionType == TransactionType.Withdraw)
        {
            <form asp-action="ChooseAccount">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label for="Id" class="control-label">Choose Account to Withdraw from:</label>
                <select class="form-control" asp-for="Id" asp-items="Model.Accountnumbers">
                </select>
            </div>
            <div class="form-group">
                <input type="submit" value="Withdraw" class="btn btn-primary" />
                @Html.Hidden("transactionId", "2")
            </div>
            </form>
        } else if (Model.TransactionType == TransactionType.Transfer)
        {
            <form asp-action="ChooseAccount">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label for="Id" class="control-label">Choose Account to Transfer from:</label>
                <select class="form-control" asp-for="Id" asp-items="Model.Accountnumbers">
                </select>
            </div>
            <div class="form-group">
                <input type="submit" value="Transfer" class="btn btn-primary" />
                @Html.Hidden("transactionId", "3")
            </div>
            </form>
        } else if (Model.TransactionType == TransactionType.BillPay){
            <form asp-action="ChooseAccount">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label for="Id" class="control-label">Choose Account to view BillPay:</label>
                <select class="form-control" asp-for="Id" asp-items="Model.Accountnumbers">
                </select>
            </div>
            <div class="form-group">
                <input type="submit" value="View BillPay" class="btn btn-primary" />
                @Html.Hidden("transactionId", "5")
            </div>
            </form>
        } else 
        {
            <form asp-action="ChooseAccount">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label for="Id" class="control-label">Choose Account to view Statement:</label>
                <select class="form-control" asp-for="Id" asp-items="Model.Accountnumbers">
                </select>
            </div>
            <div class="form-group">
                <input type="submit" value="View Statements" class="btn btn-primary" />
                @Html.Hidden("transactionId", "4")
            </div>
            </form>
        }

    </div>
</div>

<div>
    <a asp-action="Index">Back to Accounts</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
