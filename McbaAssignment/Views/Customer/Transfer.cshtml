@model Account
@{
    ViewData["Title"] = "Transfer";
    var AvailableBalance = Model.GetAvailableBalance() - Model.GetServiceFee(TransactionType.Transfer);
    if (AvailableBalance < 0) {
        AvailableBalance = 0;
    }
}

<h1 class="display-4">Account Number @Model.AccountNumber (@Model.GetAccountTypeString())</h1>
<h1 class="display-6">Available Balance: @AvailableBalance.ToString("C")</h1>
@if (@Model.GetServiceFee(TransactionType.Transfer) > 0)
{
    <p>NOTE: This transaction will incur a @Model.GetServiceFee(TransactionType.Transfer).ToString("C") service fee charge.</p>
}

<div class="row">
    <div class="col-md-4">
        <form asp-action="Transfer">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label for="Amount" class="control-label">Amount:</label>
                <input id="Amount" name="Amount" class="form-control" value="@ViewBag.Amount?.ToString("0.00")"
                    data-val="true" data-val-number="The field Amount must be a number."
                    data-val-required="The Amount field is required." />
                @Html.ValidationMessage("Amount", new { @class = "text-danger" })
            </div>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label for="DestinationAccountNumber" class="control-label">Destination Account Number:</label>
                <input id="DestinationAccountNumber" name="DestinationAccountNumber" 
                class="form-control" value="@ViewBag.DestinationAccountNumber?.ToString()"
                    data-val="true" data-val-number="The account number must be a number."
                    data-val-required="The destination account number field is required." />
                @Html.ValidationMessage("DestinationAccountNumber", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label for="Comment" class="control-label">Comment:</label>
                <input id="Comment" name="Comment" class="form-control" value="@ViewBag.Comment?.Trim()"
                    data-val="true"/>
                @Html.ValidationMessage("Comment", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <input type="submit" value="Transfer" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to Accounts</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
